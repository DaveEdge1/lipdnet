var winston = require('winston');
var Mail = require('winston-mail').Mail;
var logger = require('winston');
var env = process.env.NODE_ENV;
var Loggly = require('winston-loggly').Loggly;
var loggly_options = { subdomain: "lipd", inputToken: "0000"};
logger.add(Loggly, loggly_options);
// var tsFormat = new Date().toLocaleTimeString();

if (env === "development"){
  console.log("creating logger: development");
  var logger = new (winston.Logger)({
  transports: [
    // this is a console log, but writing console to file doesn't seem to work
    new winston.transports.Console({
      colorize: true,
      level: 'info'
    }),
    // this is a file log, that will also log debug instances.
    new winston.transports.File({
      filename: './logs/development.log',
      // timestamp: tsFormat,
       humanReadableUnhandledException: true,
       json: false,
       level: "debug",
       colorize: true,
    })
  ],
  // this handles exceptions that bubble up using the error stack call below.
   exceptionHandlers: [
     new winston.transports.File({
       level: "debug",
       filename: './logs/exceptions.log',
       humanReadableUnhandledException: true,
       handleExceptions: true,
       json: false,
       colorize: true
     }),
   ]
});
} else {
  console.log("creating logger: production");
  var logger = new (winston.Logger)({
  transports: [
    // this is a console log, but writing console to file doesn't seem to work
    new winston.transports.Console({
      colorize: true,
      level: 'info'
    }),
    // this is a file log, that will also log debug instances.
    new winston.transports.File({
      filename: './logs/development.log',
      // timestamp: tsFormat,
       humanReadableUnhandledException: true,
       json: false,
       level: "debug",
       colorize: true,
    })
  ],
  // this handles exceptions that bubble up using the error stack call below.
   exceptionHandlers: [
     new winston.transports.File({
       level: "debug",
       filename: './logs/exceptions.log',
       humanReadableUnhandledException: true,
       handleExceptions: true,
       json: false,
       colorize: true
     }),
    new winston.transports.Mail({
      to:'heiser@nau.edu',
      from:'lipd.contact@gmail.com',
      subject: 'LiPD.net: uncaughtException Report',
      host:'smtp.gmail.com',
      username:'lipd.contact@gmail.com',
      password:'aC9Un3Fudd2eJ0loU1wiT1',
      ssl: true
    })
   ]
});
}

// // Log Exceptions to debug.log
logger.debug("debug", new Error().stack);
logger.info("log: environment: " + env);
module.exports = logger;

