var winston = require('winston');
var logger = require('winston');
// var env = process.env.NODE_ENV || 'development';
var Loggly = require('winston-loggly').Loggly;
var loggly_options = { subdomain: "mysubdomain", inputToken: "efake000-000d-000e-a000-xfakee000a00" };
logger.add(Loggly, loggly_options);
// var tsFormat = new Date().toLocaleTimeString();
var logger = new (winston.Logger)({
  transports: [
    // this is a console log, but writing console to file doesn't seem to work
    new winston.transports.Console({
      // timestamp: tsFormat,
      filename: './logs/development.log',
      colorize: true,
      level: 'info'
    }),
    // this is a file log, that will also log debug instances.
    new winston.transports.File({
      filename: './logs/development.log',
      // timestamp: tsFormat,
       humanReadableUnhandledException: true,
       json: false,
       level: "debug",
       colorize: true,
    })
  ],
  // this handles exceptions that bubble up using the error stack call below.
   exceptionHandlers: [
     new winston.transports.File({
       level: "debug",
       filename: './logs/exceptions.log',
       humanReadableUnhandledException: true,
       handleExceptions: true,
       json: false,
       colorize: true
     })
   ]
});
// logger.add(winston.transports.File, { filename: "./logs/development.log" });
// // Log Exceptions to debug.log
// logger.log("debug", new Error().stack);
logger.info("Winston is ready to log...");
// logger.info('Chill Winston, the logs are being captured 3 ways- console, file, and Loggly');
module.exports = logger;


// var logger = new (winston.Logger)({
//    transports: [
//      new winston.transports.File({
//      level: "info",
//      filename: './logs/all-logs.log',
//      humanReadableUnhandledException: true,
//      handleExceptions: true,
//      json: false,
//      colorize: true
//     })
//    ],
//    exceptionHandlers: [
//      new winston.transports.File({
//        level: "debug",
//        filename: './logs/exceptions.log',
//        humanReadableUnhandledException: true,
//        handleExceptions: true,
//        json: false,
//        colorize: true
//      })
//    ]
//  });
// // Log Exceptions to debug.log
// logger.log("debug", new Error().stack);
