extends layout

// block css will insert css scripts listed in head.jade that are needed on every page.
block css
	// files below are page specific
	link(rel='stylesheet' href='css/upload.css')
	link(rel='stylesheet' href='css/zip-js.css')

block body
	body(ng-app='uploadApp' ng-cloak)
		#wrapper
			include ./include/navbar.jade
			md-toolbar
				.md-toolbar-tools
					.md-title Upload

			.col-sm-8.col-sm-offset-2
						
				#form-container(ng-controller='FormCtrl')
				
					// DEV AREA : Check that everything is binging in angular correctly. 
					h4 Form Data Preview
					p metadata
					pre {{ meta }}
					p markers
					pre {{ markers }}
					
					// is this line needed ?
					form#upload-form(ng-submit='')
					
						div(ng-controller="FileCtrl")
							md-toolbar.md-hue-1
								h2.md-toolbar-tools
									span File
									
							// UPLOAD METHOD 1 : use zip.js to unzip the LiPD file into RAM and jsonld file into SessionStorage
							ol
								// Method input: this will always be "RAM", so keep the code here but hide the element on the page
								li(style="display:hide; visibility:hidden;list-style-type: none;")
									label(style="display:hide; visibility:hidden;")
										span#form-label Temp storage
										select#creation-method-input
											option(value="Blob") RAM
								// File chooser: Set to accept LPD file types. 
								li(style="list-style-type: none;")
									label
										span#form-label Load LiPD
										// Bind this to a 'change' event so that we know when jsonld data is available to start processing.
										input#file-input(ng-model="file.input" name='file' type="file" accept=".lpd")
								// When a LPD file is chosen, all the files inside are listed here. 
								li(style="list-style-type: none;")
									span#form-label Contents
									ul#file-list
							br
							
							// UPLOAD METHOD 2: Use node / multer / angular to POST file data to mongo db		
							// Upload file to session storage
							//- form#uploadForm(action="/upss" enctype="multipart/form-data" method='')
							//- 	//- md-input-container
							//- 	//- 	label File type
							//- 	//- 	md-select(ng-model='upload.type')
							//- 	//- 		md-option(ng-repeat='i in uploadType' value='{{i}}') {{i}}
							//- 	md-button(ngf-select="uploadToSession($file)" ng-model='file' name='file' ngf-max-size="50MB") Select File  
							
							pre
								p Response Object
								p(ng-if="obj.path") {{obj}}
							pre
								p Uploaded Content
								p(ng-if="obj.path" ng-init='pullFromDb()') {{content}}								
								
						// FORM INPUT
						div(name="meta")
						
							// METADATA
							md-toolbar.md-hue-1
								h2.md-toolbar-tools
									span Metadata
							md-content(layout-padding='', layout='row', layout-sm='column')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label LiPD Version
									input(ng-model='meta.lipdVersion')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Site Name
									input(ng-model='meta.siteName')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Collection Name
									input(ng-model='meta.collectionName')
							div(layout='', layout-padding='', layout-sm='column')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Archive Type
									input(ng-model='meta.archiveType')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Data Set Name
									input(ng-model='meta.dataSetName')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Investigators
									input(ng-model='meta.investigators')
							div(layout='', layout-padding='', layout-sm='column')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Notes
									textarea(ng-model='meta.notes', columns='1', md-maxlength='150')
									
							// FUNDING
							md-toolbar.md-hue-1
								h2.md-toolbar-tools
									span Funding
							div(layout='', layout-padding='', layout-sm='column', ng-repeat='item in funding')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Agency
									input(ng-model='meta.funding[item.id][item.a]')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Grant
									input(ng-model='meta.funding[item.id][item.f]')
							div(layout='', layout-padding='', layout-sm='column')
								md-button(ng-click='addFunding()')  + Add Funding
								
							// PUBLICATION
							md-toolbar.md-hue-1
								h2.md-toolbar-tools
									span Publication
									
							// AUTHORS
							div(layout='', layout-padding='', layout-sm='column', ng-repeat='item in authors')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Author Name
									input(ng-model='meta.authors[item.id]')
							div(layout='', layout-padding='', layout-sm='column')
								md-button(ng-click='addAuthor()')  + Add Author
							div(layout='', layout-padding='', layout-wrap='', layout-sm='column')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label DOI
									input(ng-model='meta.pub.doi')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Year
									input(ng-model='meta.pub.year')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Volume
									input(ng-model='meta.pub.volume')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Edition
									input(ng-model='meta.pub.edition')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Issue
									input(ng-model='meta.pub.issue')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Publication Type
									input(ng-model='meta.pub.type')
									
							// GEOGRAPHY
							md-toolbar.md-hue-1
								h2.md-toolbar-tools
									span Geography
							div(layout='', layout-padding='', layout-sm='column')
								md-input-container
									label Type
									md-select(ng-model='meta.geo.type')
										md-option(default='Feature', ng-repeat='t in geoType', value='{{t}}') {{t}}
							md-subheader.md-primary Geometry
							div(layout='', layout-padding='', layout-sm='column')
								md-input-container
									label Type
									md-select(ng-model='meta.geo.geometryType')
										md-option(ng-repeat='t in geo.GeometryType', value='{{t}}') {{t}}
										
							// GOOGLE MAP
							// ng-if="userData.geo.geometry.coordinates"
							div
								ui-gmap-google-map(center='map.center', zoom='map.zoom', draggable='true', options='options', bounds='map.bounds')
									ui-gmap-markers(models='geoMarkers', coords="'self'", events='events', options='options')
									
							// COORDINATES
							div(layout='', layout-padding='', layout-sm='column', ng-repeat='obj in geoMarkers')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									md-tooltip -90 to 90
									label Latitude
									input(ng-model='geoMarkers[$index].latitude', required, type='number', min='-90', max='90')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									md-tooltip -180 to 180
									label Longitude
									input(ng-model='geoMarkers[$index].longitude', required, type='number', min='-180', max='180')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Elevation
									input(type='number', ng-model='geoMarkers[$index].elevation')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Units
									md-select(ng-model='geoMarkers[$index].unit')
										md-option(ng-repeat='u in unitsDistance', value='{{u.short}}') {{u.long}}
								md-button.md-small(flex = "", ng-click='removeCoords($index)')  Remove 
							div(layout='', layout-padding='', layout-sm='column')
								md-button(ng-click='addCoordinates()')  + Add Coordinates
								md-button(ng-click='pushMarkers()')  Save 
							md-subheader.md-primary Properties
							div(layout='', layout-padding='', layout-sm='column')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Site Name
									input(ng-model='meta.geo.properties.siteName')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Location
									input(ng-model='meta.geo.properties.location')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Country
									input(ng-model='meta.geo.properties.country')

										
							// PALEO DATA
							md-toolbar.md-hue-1
								h2.md-toolbar-tools
									span PaleoData
							//- md-subheader.md-primary Core Length
							//- div(layout='', layout-padding='', layout-sm='column')
							//- 	md-input-container(flex='66')
							//- 		label Value
							//- 		input(type='number', ng-model='userData.core.value')
								//- md-input-container(flex='')
								//- 	label Units
								//- 	md-select(ng-model='userData.core.unit')
								//- 		md-option(ng-repeat='u in unitsDistance', value='{{u.short}}') {{u.long}}
							div(layout='', layout-padding='', layout-sm='column')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									md-tooltip(md-visible='demo.showTooltip') Here is some more helpful information
									label Table Name
									input(ng-model='meta.paleoData.paleoMeasurementTable.tableName')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Filename
									input(ng-model='meta.paleoData.paleoMeasurementTable.filename')
							div(layout='', layout-padding='', layout-sm='column', ng-model='f.columns', ng-repeat='i in colsPaleo')
								md-subheader.md-primary Column {{i.colsPaleo}}
								md-input-container(flex='', ng-repeat='(k,v) in i', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label {{k}}
									input(value='{{v}}')
							div(layout='', layout-padding='', layout-sm='column')
								md-button(ng-click='addColumnPaleo()')  + Add Column
								
							// CHRONOLOGY
							md-toolbar.md-hue-1
								h2.md-toolbar-tools
									span ChronData
							div(layout='', layout-padding='', layout-sm='column')
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									md-tooltip(md-visible='demo.showTooltip') Here is some more helpful information
									label Table Name
									input(ng-model='meta.chronData.chronMeasurementTable.tableName' required)
								md-input-container(flex='', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label Filename
									input(ng-model='meta.chronData.chronMeasurementTable.filename' required)
							div(layout='', layout-padding='', layout-sm='column', ng-model='colsChron', ng-repeat='i in colsChron')
								md-subheader.md-primary Column {{i.colsChron}}
								// when the toggle is true, all fields animate and show to show the input values. ng-class changes.
								md-input-container(flex='', ng-repeat='(k,v) in i', ng-class="{'md-input-has-value': pageMeta.toggle}")
									label {{k}}
									input(value='{{v}}')
							div(layout='', layout-padding='', layout-sm='column')
								md-button(ng-click='addColumnChron()')  + Add Column

						// DOWNLOAD && PUSH TO DB
						//- div(ng-controller="FileCtrl")
						//- 	md-toolbar.md-hue-1
						//- 		h2.md-toolbar-tools
						//- 			span Download
						//- 	br
						//- 	p These buttons will activate when LiPD data is complete and valid.
						//- 	// Push to database
						//- 	form#uploadForm(action="/updb" enctype="multipart/form-data" method='post')
						//- 		md-button(ng-disabled="!validated" ngf-select="uploadToDb()" ng-model='file' name='file' ngf-max-size="50MB") Push to Database   
						//- 
						//- 	// Download to local computer
						//- 	form#uploadForm(action="/dwnld" enctype="multipart/form-data" method='post')
						//- 		md-button(ng-disabled="!validated" ngf-select="downloadToLocal($file)" ng-model='file' name='file' ngf-max-size="50MB") Download LiPD   


// block js will insert js scripts listed in footer.jade that are needed on every page.
block js
	// files below are page specific
	script(src='apps/uploadApp.js')
	script(src='js/ngForm.js')
	script(src='js/ngFile.js')
	script(src="lib/zip/zip.js")
	script(src="lib/zip/zip-ext.js")
	script(src='https://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.15/angular-ui-router.min.js')
	script(src='https://cdnjs.cloudflare.com/ajax/libs/angular-google-maps/2.2.0/angular-google-maps.min.js')
	script(src='https://cdnjs.cloudflare.com/ajax/libs/danialfarid-angular-file-upload/8.0.1/ng-file-upload-shim.min.js')
	script(src='https://cdnjs.cloudflare.com/ajax/libs/danialfarid-angular-file-upload/8.0.1/ng-file-upload.min.js')
	script(src="https://cdnjs.cloudflare.com/ajax/libs/ngStorage/0.3.6/ngStorage.min.js")
	script(src='//maps.googleapis.com/maps/api/js?sensor=false')
